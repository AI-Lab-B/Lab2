# -*- coding: utf-8 -*-
"""l226807-lab2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uLWpA3kCFn_YTdi-XOyNLJvKT2JMHc6O
"""

import matplotlib.pyplot as plt
import numpy as np

group_A = [12, 15, 14, 13, 16, 18, 19, 15, 14, 20, 17, 14, 15,40,45,50,62]
group_B = [12, 17, 15, 13, 19, 20, 21, 18, 17, 16, 15, 14, 16, 15]

fig = plt.figure(figsize =(5, 5))

# Creating plot
plt.boxplot(group_A)
plt.show()

plt.boxplot(group_B)

# show plot
plt.show()

plt.subplot()
plt.plot(group_A)

plt.subplot()
plt.plot(group_B)

plt.show()

import matplotlib.pyplot as plt
import numpy as np


file = open("genome_seqeunce.txt", "r")

content = file.read()


file.close()

genome_length=len(content)
print(genome_length)
# x = cos(t), y = sin(t), z = t (or a scaled version of t)
# We want to span a range so that the helix makes a few turns.
t = np.linspace(0, 4 * np.pi, genome_length) # 4*pi gives about 2 turns
x = np.cos(t)
y = np.sin(t)
z = np.linspace(0, 5, genome_length) # z increases linearly to spread out the helix vertically
# Combine the coordinates into a (genome_length x 3) array
coordinates = np.column_stack((x, y, z))

colors = {'A': 'red', 'T': 'blue', 'C': 'green', 'G': 'orange'}

fig = plt.figure()
ax = fig.add_subplot(projection='3d')
for i, nucleotide in enumerate(content):
 ax.scatter(coordinates[i, 0], coordinates[i, 1], coordinates[i, 2],
 color=colors[nucleotide], marker='o')

ax.set_xlabel("X")
ax.set_ylabel("Y")
ax.set_zlabel("Z")
ax.set_title("Genome Visualization")

from PIL import Image
import matplotlib.pyplot as plt
from numpy import asarray

img = Image.open('space.jpg')
numpydata = asarray(img)
# data
print(f'Normal\n\n {numpydata} \n')

plt.imshow(numpydata)


print(f'90 degree turn \n\n {np.rot90(numpydata)}');


print(f'flip \n\n {np.fliplr(numpydata)}');
gray_img = np.dot (numpydata[..., :3], [0.299, 0.587, 0.114])
plt.imshow(gray_img)

from sklearn.datasets import load_iris
import numpy as np
import matplotlib.pyplot as plt

# Load the Iris dataset
iris = load_iris()
# Accessing the features (data) using NumPy array
X = np.array(iris.data) # (Features (sepal length, sepal width, petal length, petalwidth) #Accessing the target labels (species)
Y = np.array(iris.target) # Target variable (species: 0 for setosa, 1 for versicolor, 2 for virginica)

print(f'mean {np.median(X,axis=0)}')
print(f'median {np.median(X,axis=0)}')
print(f'standard devitation {np.std(X,axis=0)}')
sepaldata = X[:, :2]
plt.scatter(sepaldata[:,0], sepaldata[:,1])
plt.show()
plt.hist(sepaldata[:,0])
plt.show()
petaldata = X[:, 2:4]
plt.plot(petaldata[:,0], petaldata[:,1])